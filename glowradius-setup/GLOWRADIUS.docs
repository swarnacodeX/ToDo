GLOWRADIUS SUMMARY
A venture that helps B2B companies find their perfect/suitable buyer. They provide a tool for Marketing teams to find their best leads and contact the suitable/desired leads.

TECHNOLOGY STACK
1. FRONTEND-REACT JS
    -ES5/6: ES5 and ES6 are just versions of JavaScript that introduced new features over time. ES5 brought some important basics like better array methods and strict mode, but ES6 really changed the game — it added things like let, const, arrow functions, and classes that make writing code cleaner and more modern. Most of the JavaScript we write today is based on ES6 and beyond.
    -State management library Redux: Redux is a tool that helps manage state in large applications, especially when using React. Instead of passing data through multiple layers of components, Redux keeps everything in one central place called a store. It’s like a single source of truth for your app’s data, making it easier to track changes and debug issues.
    -Promises,Callbacks, Async and Await: In JavaScript, when you need to wait for something like an API call or a timer, you use asynchronous code. Callbacks were the original way to handle this, but they could get messy and hard to follow. Promises came next, allowing you to chain actions more cleanly. Then came async/await, which is now the most readable way to write async code — it lets you write it almost like it’s synchronous, which makes it easier to understand and maintain.

2. BACKEND-Firebase
    -Firebase is a great option for backend development, especially for someone who doesn’t have a lot of experience with servers or complex systems. It uses something called serverless architecture, which means you don’t have to set up or manage any servers yourself — everything runs in the cloud using Cloud Functions. These functions automatically scale, so whether your app has 10 users or 10,000, it can handle the load without crashing. Firebase also helps with fault tolerance, so if something fails or an error happens, it can recover without stopping the whole system. It’s secure by default, with built-in authentication and rules to control who can access your data. Firebase also makes caching easier through things like Firestore’s offline support, so users can still access data even without internet for a while. For load balancing, since the platform runs on Google’s infrastructure, it automatically spreads out traffic to keep things running smoothly. Firebase also works well in event-driven apps — for example, when a user signs up, a Cloud Function can instantly send them a welcome email or update other services. And with support for async communication like Pub/Sub (publish and subscribe), it can handle messages between different parts of your app without everything needing to happen at the same time. Overall, Firebase takes care of the hard backend stuff so developers can focus on building the app.

    -Creating a REST API using Node.js is a common way to build backend services that handle requests like getting data, creating new records, updating, or deleting them. Using a framework like Express.js, developers can easily set up routes for different endpoints such as `/items` or `/products` that respond to HTTP methods like GET, POST, PUT, and DELETE. Middlewares in Node.js are functions that run in the middle of the request-response cycle — they can be used for tasks like logging, validating data, checking authentication tokens, or handling errors. For example, a middleware can check if a user is logged in before allowing access to certain routes. This modular approach helps keep the code clean and manageable, making it easier to scale and maintain the API over time.

